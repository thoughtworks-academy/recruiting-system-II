ambassador:
    image: cpuguy83/docker-grand-ambassador
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: "-name assembly_node-app_1 -name assembly_jenkins-nodejs_1 -name assembly_node-task-queue_1"
mysql:
  image: mysql:5.7
  ports:
    - 3306:3306
  env_file:
    - ./production.env
  volumes:
    - ./mysql/create-db.sh:/tmp/create-db.sh
jetty-api:
  image: jetty:9.3
  volumes:
    - ../paper-api/build/libs:/var/lib/jetty/webapps
  links:
    - mysql:mysql
  ports:
    - "8080:8080"
user-api:
  image: jetty:9.3
  volumes:
    - ../user-api/build/libs:/var/lib/jetty/webapps
  links:
    - mysql:mysql
  ports:
    - "8888:8888"
mongodb:
  image: mongo:3.2
  ports:
      - "27017:27017"
node-app:
  image: node:5.8
  ports:
    - "3000:3000"
  volumes:
    - ../express-api:/var/app
  command: bash -c "cd /var/app && npm start"
  links:
    - mongodb:mongodb
    - jetty-api:jetty-api
    - nginx:nginx
    - node-task-queue:node-task-queue
  env_file:
    - ./production.env
node-task-queue:
  image: node:5.8
  volumes:
    - ../task-queue:/var/app
  command: bash -c "cd /var/app && npm start"
  links:
    - jenkins-nodejs:jenkins-nodejs
    - nginx:nginx
    - ambassador:node-app
    - mongodb:mongodb
  env_file:
    - ./production.env
  ports:
    - "4000:4000"
nginx:
  image: nginx:1.9
  env_file:
    - ./production.env
  volumes:
    - ./nginx/conf.d:/etc/nginx/conf.d
    - ~/docker-cached/nginx_fs:/var/fs
  ports:
    - "8000:80"
jenkins-nodejs:
  build: ./jenkins-nodejs
  links:
    - nginx:nginx
    - ambassador:node-task-queue
  env_file:
    - ./production.env
  ports:
    - "18080:8080"
